# Generated by Django 5.1.6 on 2025-02-25 12:40

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('street', models.CharField(blank=True, max_length=255, verbose_name='Street')),
                ('ward', models.CharField(max_length=255, verbose_name='Ward')),
                ('district', models.CharField(max_length=255, verbose_name='District')),
                ('region', models.CharField(blank=True, max_length=255, null=True, verbose_name='Region')),
                ('postal_code', models.CharField(max_length=255, verbose_name='Postal Code')),
            ],
            options={
                'verbose_name': 'Address',
                'verbose_name_plural': 'Addresses',
            },
        ),
        migrations.CreateModel(
            name='Plate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('plate_number', models.CharField(max_length=50, unique=True, verbose_name='Plate Number')),
                ('plate_label', models.CharField(max_length=255, verbose_name='Plate Label')),
                ('status', models.CharField(choices=[('POS', 'Positive'), ('NEG', 'Negative')], max_length=10, verbose_name='Status')),
                ('volume', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Volume (µl)')),
                ('freezer_number', models.CharField(max_length=50, verbose_name='Freezer Number')),
                ('shelf_number', models.CharField(max_length=50, verbose_name='Shelf Number')),
            ],
            options={
                'verbose_name': 'Plate',
                'verbose_name_plural': 'Plates',
            },
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sample_id', models.CharField(max_length=100, unique=True, verbose_name='Sample ID')),
                ('sample_type', models.CharField(choices=[('DBS', 'Dried Blood Spot'), ('DNA', 'DNA Sample')], max_length=10, verbose_name='Sample Type')),
                ('collection_date', models.DateField(verbose_name='Collection Date')),
                ('status', models.CharField(choices=[('POS', 'Positive'), ('NEG', 'Negative')], max_length=3, verbose_name='Status')),
                ('small_bag_number', models.CharField(blank=True, max_length=50, verbose_name='Small Bag Number')),
                ('large_bag_number', models.CharField(blank=True, max_length=50, verbose_name='Large Bag Number')),
                ('container_label', models.CharField(max_length=255, verbose_name='Container Label')),
                ('container_location', models.CharField(max_length=255, verbose_name='Container Location')),
                ('receiver_initials', models.CharField(max_length=10, verbose_name='Receiver’s Initials')),
            ],
            options={
                'verbose_name': 'Sample',
                'verbose_name_plural': 'Samples',
            },
        ),
        migrations.CreateModel(
            name='Study',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
            ],
            options={
                'verbose_name': 'Study',
                'verbose_name_plural': 'Studies',
            },
        ),
        migrations.CreateModel(
            name='Pooling',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('pooling_date', models.DateField(verbose_name='Pooling Date')),
                ('pool_name', models.CharField(max_length=255, verbose_name='Pool Name/Label')),
                ('number_of_plates', models.PositiveIntegerField(verbose_name='Number of Plates')),
                ('rack_compartment_number', models.CharField(max_length=50, verbose_name='Rack/Compartment Number')),
                ('fridge_freezer_number', models.CharField(max_length=50, verbose_name='Fridge/Freezer Number')),
                ('expert_initials', models.CharField(max_length=10, verbose_name='Expert’s Initials')),
                ('capture_plate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pooled_capture_plate', to='sample_tracker.plate', verbose_name='Capture Plate')),
            ],
            options={
                'verbose_name': 'Pooling',
                'verbose_name_plural': 'Pooling',
            },
        ),
        migrations.CreateModel(
            name='QualityCheck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('Accepted', 'Accepted'), ('Rejected', 'Rejected')], max_length=10, verbose_name='Quality Check Status')),
                ('qc_date', models.DateField(verbose_name='Quality Check Date')),
                ('expert_initials', models.CharField(max_length=10, verbose_name='Expert’s Initials')),
                ('sample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sample_tracker.sample', verbose_name='Sample')),
            ],
            options={
                'verbose_name': 'Quality Check',
                'verbose_name_plural': 'Quality Checks',
            },
        ),
        migrations.CreateModel(
            name='MolecularDiagnostic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('technique', models.CharField(choices=[('qPCR', 'qPCR'), ('Genotyping', 'Genotyping'), ('MIP', 'MIP Capture & Sequencing')], max_length=50, verbose_name='Technique')),
                ('processing_date', models.DateField(verbose_name='Processing Date')),
                ('plasmodium_species', models.CharField(blank=True, max_length=50, verbose_name='Plasmodium Species')),
                ('expert_initials', models.CharField(max_length=10, verbose_name='Expert’s Initials')),
                ('sample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sample_tracker.sample', verbose_name='Sample')),
            ],
            options={
                'verbose_name': 'Molecular Diagnostic',
                'verbose_name_plural': 'Molecular Diagnostics',
            },
        ),
        migrations.CreateModel(
            name='DNAExtraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('extraction_date', models.DateField(verbose_name='Extraction Date')),
                ('expert_initials', models.CharField(max_length=10, verbose_name='Expert’s Initials')),
                ('plate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sample_tracker.plate', verbose_name='Plate')),
                ('sample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sample_tracker.sample', verbose_name='Sample')),
            ],
            options={
                'verbose_name': 'DNA Extraction',
                'verbose_name_plural': 'DNA Extractions',
            },
        ),
        migrations.CreateModel(
            name='Storage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('container_number', models.CharField(max_length=50, verbose_name='Container Number')),
                ('container_label', models.CharField(max_length=255, verbose_name='Container Label')),
                ('container_location', models.CharField(max_length=255, verbose_name='Container Location')),
                ('storage_type', models.CharField(choices=[('Archived', 'Archived'), ('Processing', 'Processing')], max_length=50, verbose_name='Storage Type')),
                ('storage_date', models.DateField(verbose_name='Storage Date')),
                ('expert_initials', models.CharField(max_length=10, verbose_name='Expert’s Initials')),
                ('sample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sample_tracker.sample', verbose_name='Sample')),
            ],
            options={
                'verbose_name': 'Storage',
                'verbose_name_plural': 'Storages',
            },
        ),
        migrations.CreateModel(
            name='StudySite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('phone', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='study_site_address', to='sample_tracker.address')),
                ('study', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='study_sites', to='sample_tracker.study')),
            ],
            options={
                'verbose_name': 'Study Site',
                'verbose_name_plural': 'Study Sites',
            },
        ),
        migrations.AddField(
            model_name='sample',
            name='study_site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sample_tracker.studysite', verbose_name='Study Site'),
        ),
    ]
